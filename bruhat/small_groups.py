#!/usr/bin/env python

from bruhat.todd_coxeter import Schreier
from bruhat.word import Gen, build

#f = open("small_groups.dump")

small_groups = """\
4 / C4 / Group( [ F1 ] ) / [ F1^4 ]
4 / C2 x C2 / Group( [ F1, F2 ] ) / [ F1^2, F2^2, (F2*F1)^2 ]
5 / C5 / Group( [ F1 ] ) / [ F1^5 ]
6 / S3 / Group( [ F1, F2 ] ) / [ F1^2, F2^3, (F1*F2)^2 ]
6 / C6 / Group( [ F1, F2 ] ) / [ F1^2, F2^3, F2^-1*F1*F2*F1 ]
7 / C7 / Group( [ F1 ] ) / [ F1^7 ]
8 / C8 / Group( [ F1 ] ) / [ F1^8 ]
8 / C4 x C2 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, F2*F1^-1*F2*F1 ]
8 / D8 / Group( [ F1, F2 ] ) / [ F1^2, F2^2, (F2*F1)^4 ]
8 / Q8 / Group( [ F1, F2 ] ) / [ F2^2*F1^2, F2*F1*F2*F1^-1, F1^4 ]
8 / C2 x C2 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^2, (F2*F1)^2, (F3*F1)^2, (F3*F2)^2 ]
9 / C9 / Group( [ F1 ] ) / [ F1^9 ]
9 / C3 x C3 / Group( [ F1, F2 ] ) / [ F1^3, F2^3, F2^-1*F1^-1*F2*F1 ]
10 / D10 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^5 ]
10 / C10 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^5 ]
11 / C11 / Group( [ F1 ] ) / [ F1^11 ]
12 / C3 : C4 / Group( [ F1, F3 ] ) / [ F3^3, F1^4, F1^-1*F3*F1*F3, (F1^-1*F3)^2*F1^-2 ]
12 / C12 / Group( [ F1, F2 ] ) / [ F2^3, F1^4, F2^-1*F1^-1*F2*F1 ]
12 / A4 / Group( [ F1, F2 ] ) / [ F2^2, F1^3, (F2*F1)^3 ]
12 / D12 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^3, (F1*F3)^2, (F2*F1)^2, F3^-1*F2*F3*F2 ]
12 / C6 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^3, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2 ]
13 / C13 / Group( [ F1 ] ) / [ F1^13 ]
14 / D14 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^7 ]
14 / C14 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^7 ]
15 / C15 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1, F2^5 ]
16 / C16 / Group( [ F1 ] ) / [ F1^16 ]
16 / C4 x C4 / Group( [ F1, F2 ] ) / [ F1^4, F2^4, F2^-1*F1^-1*F2*F1 ]
16 / (C4 x C2) : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, (F1*F2*F1)^2, (F2*F1^-1)^4, (F2*F1*F2*F1^-1)^2 ]
16 / C4 : C4 / Group( [ F1, F2 ] ) / [ F2^4, F1^4, F1^-1*F2*F1*F2, F1^2*F2^-1*F1^2*F2, (F2^-1*F1^-2*F2^-1)^2 ]
16 / C8 x C2 / Group( [ F1, F2 ] ) / [ F2^2, F2*F1^-1*F2*F1, F1^8 ]
16 / C8 : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1^-1*(F1^-1*F2)^2*F1^-1, F1^-2*F2*F1^2*F2, (F2*F1*F2*F1^-1)^2 ]
16 / D16 / Group( [ F1, F2 ] ) / [ F1^2, F2^2, (F1*F2)^8 ]
16 / QD16 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, F1^-1*F2*F1^2*F2*F1^-1, F2*F1*(F2*F1^-1)^3 ]
16 / Q16 / Group( [ F1, F2 ] ) / [ F2^2*F1^-2, F1^4, F1*F2^2*F1, F1*(F2*F1^-1)^2*F2^-1*F1^-1*F2^-1 ]
16 / C4 x C2 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F1^4, F2*F1^-1*F2*F1, F3*F1^-1*F3*F1, (F3*F2)^2 ]
16 / C2 x D8 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^2, (F3*F1)^2, (F3*F2)^2, (F2*F1)^4, F2*F1*F2*F3*(F2*F1)^2*F3*F1 ]
16 / C2 x Q8 / Group( [ F1, F2, F3 ] ) / [ F3^2, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F3*F1^-1*F3*F1, F3*F2^-1*F3*F2 ]
16 / (C4 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^4, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F2*F3^2*F1*F2*F1 ]
16 / C2 x C2 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, F4^2, (F2*F1)^2, (F3*F1)^2, (F4*F1)^2, (F3*F2)^2, (F4*F2)^2, (F4*F3)^2 ]
17 / C17 / Group( [ F1 ] ) / [ F1^17 ]
18 / D18 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^9 ]
18 / C18 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^9 ]
18 / C3 x S3 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2 ]
18 / (C3 x C3) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, (F1*F2)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2 ]
18 / C6 x C3 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2 ]
19 / C19 / Group( [ F1 ] ) / [ F1^19 ]
20 / C5 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F1^-1*F3*F1*F3, F3^5, (F1^-1*F3)^2*F1^-2 ]
20 / C20 / Group( [ F1, F2 ] ) / [ F1^4, F2^-1*F1^-1*F2*F1, F2^5 ]
20 / C5 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F3^-1*F1^-1*F3*F1*F3^-1, F3^5, (F1^2*F3)^2 ]
20 / D20 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F1*F3)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F3^5 ]
20 / C10 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^5 ]
21 / C7 : C3 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1*F2^-1, F2^7 ]
21 / C21 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1, F2^7 ]
22 / D22 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^11 ]
22 / C22 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^11 ]
23 / C23 / Group( [ F1 ] ) / [ F1^23 ]
24 / C3 : C8 / Group( [ F1, F4 ] ) / [ F4^3, F1^-1*F4*F1*F4, F1^8 ]
24 / C24 / Group( [ F1, F2 ] ) / [ F2^3, F2^-1*F1^-1*F2*F1, F1^8 ]
24 / SL(2,3) / Group( [ F1, F2 ] ) / [ F1^3, F2^4, F2^-1*F1*F2*F1*F2^-1*F1, F1^-1*F2^-1*(F1^-1*F2)^2, (F1^-1*F2^-1)^3 ]
24 / C3 : Q8 / Group( [ F1, F2, F4 ] ) / [ F4^3, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F1^-1*F4*F1*F4, F4^-1*F2^-1*F4*F2, (F1^-1*F4)^2*F1^-2 ]
24 / C4 x S3 / Group( [ F1, F2, F4 ] ) / [ F1^2, F4^3, F2^4, (F1*F4)^2, F2^-1*F1*F2*F1, F4^-1*F2^-1*F4*F2 ]
24 / D24 / Group( [ F1, F2, F4 ] ) / [ F1^2, F4^3, F2^4, (F1*F2)^2, (F1*F4)^2, F4^-1*F2^-1*F4*F2 ]
24 / C2 x (C3 : C4) / Group( [ F1, F2, F4 ] ) / [ F2^2, F4^3, F1^4, F1^-1*F4*F1*F4, F2*F1^-1*F2*F1, F4^-1*F2*F4*F2 ]
24 / (C6 x C2) : C2 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^2, F4^3, (F1*F4)^2, F4^-1*F2*F4*F2, (F2*F1)^4 ]
24 / C12 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^3, F1^4, F2*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2 ]
24 / C3 x D8 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^3, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, (F2*F1)^4 ]
24 / C3 x Q8 / Group( [ F1, F2, F3 ] ) / [ F3^3, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2 ]
24 / S4 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^2, F2^3, (F1*F2)^2, (F2^-1*F3*F1)^2, F1*F3*F2*F3*F2^-1*F1*F3 ]
24 / C2 x A4 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^2, F2^3, F2^-1*F1*F2*F1, (F3*F1)^2, (F3*F2)^3, (F2^-1*F3)^3 ]
24 / C2 x C2 x S3 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, F4^3, (F1*F4)^2, (F2*F1)^2, (F3*F1)^2, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3 ]
24 / C6 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, F4^3, (F2*F1)^2, (F3*F1)^2, F4^-1*F1*F4*F1, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3 ]
25 / C25 / Group( [ F1 ] ) / [ F1^25 ]
25 / C5 x C5 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F1^5, F2^5 ]
26 / D26 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^13 ]
26 / C26 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^13 ]
27 / C27 / Group( [ F1 ] ) / [ F1^27 ]
27 / C9 x C3 / Group( [ F1, F2 ] ) / [ F2^3, F2^-1*F1^-1*F2*F1, F1^9 ]
27 / (C3 x C3) : C3 / Group( [ F1, F2 ] ) / [ F1^3, F2^3, (F1^-1*F2^-1)^3, (F2^-1*F1)^3 ]
27 / C9 : C3 / Group( [ F1, F2 ] ) / [ F2^3, F1*F2*F1^2*F2^-1, F1^-1*F2^-1*F1^4*F2 ]
27 / C3 x C3 x C3 / Group( [ F1, F2, F3 ] ) / [ F1^3, F2^3, F3^3, F2^-1*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2 ]
28 / C7 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F1^-1*F3*F1*F3, (F1^-1*F3)^2*F1^-2, F3^7 ]
28 / C28 / Group( [ F1, F2 ] ) / [ F1^4, F2^-1*F1^-1*F2*F1, F2^7 ]
28 / D28 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F1*F3)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F3^7 ]
28 / C14 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^7 ]
29 / C29 / Group( [ F1 ] ) / [ F1^29 ]
30 / C5 x S3 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F2^5 ]
30 / C3 x D10 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F3^5 ]
30 / D30 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F2)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2, F3^5 ]
30 / C30 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2, F3^5 ]
31 / C31 / Group( [ F1 ] ) / [ F1^31 ]
32 / C32 / Group( [ F1 ] ) / [ F1^32 ]
32 / (C4 x C2) : C4 / Group( [ F1, F2 ] ) / [ F1^4, F2^4, F2^2*F1^-1*F2^-2*F1, F1*F2*F1^2*F2^-1*F1, F2^2*F1^-1*F2^-2*F1, (F2*F1)^2*(F2^-1*F1)^2, (F2*F1*F2^-1*F1^-1)^2, (F1*F2*F1^-1*F2)^2 ]
32 / C8 x C4 / Group( [ F1, F2 ] ) / [ F1*F2^-1*F1^-1*F2, F2^4, F1^8 ]
32 / C8 : C4 / Group( [ F1, F2 ] ) / [ F2^4, F2^2*F1^-1*F2^2*F1, F1^-3*F2^-1*F1^-1*F2, F1^-1*F2^-1*F1^-3*F2, (F2*F1*F2^-1*F1^-1)^2 ]
32 / (C8 x C2) : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1*F2*F1^-2*F2*F1, (F2*F1^-1)^2*(F2*F1)^2, F1^8 ]
32 / (C2 x C2 x C2) : C4 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, (F2*F1*F2*F1^-1)^2, (F1^-1*F2)^4, F1^-2*(F2*F1^2)^3*F2 ]
32 / (C8 : C2) : C2 / Group( [ F1, F2 ] ) / [ F2^2, (F1*F2*F1)^2, (F1^-1*F2*F1*F2)^2, F1^8 ]
32 / C2 . ((C4 x C2) : C2) = (C2 x C2) . (C4 x C2) / Group( [ F1, F2 ] ) / [ F2^4, F2^4, F1^4*F2^2, F1^2*F2*F1^2*F2^-1, (F1^-1*F2)^3*F1^-1*F2^-1, (F2*F1^-1*F2^-1*F1)^2, (F2^-1*F1^-1*F2^-1*F1)^2 ]
32 / (C8 x C2) : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, (F1^-1*F2*F1^-1)^2, (F2*F1^-1*(F2*F1)^3)^2, (F1*F2*F1^-1*F2)^4 ]
32 / Q8 : C4 / Group( [ F1, F2 ] ) / [ F2^4, F1^4, F2*F1^-1*F2^2*F1*F2, F1^-1*F2^-1*F1^-2*F2*F1^-1, F1*F2*F1^-1*F2^-1*F1*F2^-1*F1^-1*F2^-1, (F1^-1*F2^-2*F1^-1)^2 ]
32 / (C4 x C4) : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1^-1*F2*F1^2*F2*F1^-1, (F1*F2)^4 ]
32 / C4 : C8 / Group( [ F1, F2 ] ) / [ F2^4, F1^-1*F2*F1*F2, F2^-1*F1^-1*F2^2*F1*F2^-1, F1^8 ]
32 / C8 : C4 / Group( [ F1, F2 ] ) / [ F1^4, F1^-1*F2^3*F1*F2^-1, F1^2*F2^-1*F1^2*F2, F2^2*F1^-1*F2^2*F1, F2^-2*F1^-1*F2*F1*F2^-1, (F1^-1*F2^-1*F1*F2^-1)^2 ]
32 / C8 : C4 / Group( [ F1, F2 ] ) / [ F1^4, F1^-1*F2*F1*F2, F1^2*F2^-1*F1^2*F2, F2^8 ]
32 / C4 . D8 = C4 . (C4 x C2) / Group( [ F1, F2 ] ) / [ F1*F2^-2*F1^-1*F2^-2, F1*(F1*F2)^2*F1, F1^2*(F1*F2^-1)^2, F2^-1*F1^-1*F2^3*F1 ]
32 / C16 x C2 / Group( [ F1, F2 ] ) / [ F2^2, F2*F1^-1*F2*F1, F1^16 ]
32 / C16 : C2 / Group( [ F1, F2 ] ) / [ F2^2, F1*F2*F1^-2*F2*F1, (F2*F1)^2*(F2*F1^-1)^2, (F2*F1)^2*F1^6 ]
32 / D32 / Group( [ F1, F2 ] ) / [ F1^2, F2^2, (F2*F1)^16 ]
32 / QD32 / Group( [ F1, F2 ] ) / [ F2^2, F1^4, (F1^-1*F2*F1^-1)^2, (F2*F1^-1*F2*F1)^3*F2*F1*F2*F1 ]
32 / Q32 / Group( [ F1, F2 ] ) / [ F1^4, F2^4, F2^-2*F1^-2, (F1*F2)^7*F1*F2^-1 ]
32 / C4 x C4 x C2 / Group( [ F1, F2, F3 ] ) / [ F3^2, F1^4, F2^4, F2^-1*F1^-1*F2*F1, F3*F1^-1*F3*F1, F3*F2^-1*F3*F2 ]
32 / C2 x ((C4 x C2) : C2) / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F1^4, F3*F1^-1*F3*F1, (F3*F2)^2, F1^2*F2*F1^-2*F2, (F2*F1)^4, F2*F1*F2*F3*F1*F2*F1^-1*F2*F3*F1^-1 ]
32 / C2 x (C4 : C4) / Group( [ F1, F2, F3 ] ) / [ F3^2, F2^4, F1^4, F1^-1*F2*F1*F2, F3*F1^-1*F3*F1, F3*F2^-1*F3*F2, F1^2*F2^-1*F1^2*F2, (F2^-1*F1^-2*F2^-1)^2 ]
32 / (C4 x C4) : C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^4, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, (F1^2*F2)^2, F2*F3^2*F1^-1*F2*F1 ]
32 / C4 x D8 / Group( [ F1, F2, F3 ] ) / [ F2^2, F1^2*F3^2, F1*F3^-1*F1^-1*F3, F1^4, F3^-1*F2*F3*F2, (F1*F2*F1)^2, (F2*F1^-1)^4, (F2*F1*F2*F1^-1)^2 ]
32 / C4 x Q8 / Group( [ F1, F2, F3 ] ) / [ F2^4, F1^4, F3^4, F1^-1*F2*F1*F2, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F2^2*F3*F1^-2*F3, F1^-1*F3*F1^-1*F2^-2*F3, F1^2*F2^-1*F1^2*F2 ]
32 / (C2 x C2 x C2 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^2, (F3*F2)^2, (F2*F1*F3*F1)^2, (F2*F1)^4, (F3*F1)^4, (F3*F1*F2)^4 ]
32 / (C4 x C2 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^2, F2^4, F3*F2^-1*F3*F2, (F1*F2)^2, F2*F1*F2^-2*F1*F2, (F3*F1)^4 ]
32 / (C2 x Q8) : C2 / Group( [ F1, F2, F3 ] ) / [ F3^2, F1*F2*F1*F2^-1, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F3*F2^-1*F3*F2, (F1*F3*F1)^2, (F3*F1^-1)^4, (F3*F1*F3*F1^-1)^2 ]
32 / (C4 x C2 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^4, F3^4, F3^-1*F2*F3*F2, F3^2*(F1*F2)^2, F3^2*F1*F3^-2*F1, (F1*F3)^4 ]
32 / (C4 x C4) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^4, F3^4, F3^-1*F2^-1*F3*F2, (F3^2*F1)^2, (F2^2*F1)^2, F3^-1*F1*F2*F3*F2*F1, F2^-1*F3^2*F1*F2*F1 ]
32 / (C2 x C2) . (C2 x C2 x C2) / Group( [ F1, F2, F3 ] ) / [ F3^2*F1^2, F1^4, F2^4, F2^-1*F1^-1*F2*F1^-1, F3^-1*F2^-1*F3*F2, F2^2*F1^-1*F2^2*F1, F3*F1*F2^2*F3*F1, (F1^-1*F2^-2*F1^-1)^2 ]
32 / (C4 x C4) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^-1*F3*F2*F3^-1, F3^4, F2^4, F2^-1*F1*F3^2*F2*F1, F3^-1*F1*F2^-1*F3*F1*F2^-1, F2^-1*F1*F2^2*F1*F2^-1, (F3^2*F1)^2, F2^-1*F3^2*F1*F2*F1 ]
32 / (C4 x C4) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^4, F2^4, (F1*F2)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2 ]
32 / C4 : Q8 / Group( [ F1, F2, F3 ] ) / [ F1^2*F2^2, F2*F1*F2*F1^-1, F2^4, F3^4, F1^-1*F3*F1*F3, F3^-1*F2^-1*F3*F2 ]
32 / C8 x C2 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F3*F1^-1*F3*F1, F2*F1^-1*F2*F1, (F3*F2)^2, F1^8 ]
32 / C2 x (C8 : C2) / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F3*F1^-1*F3*F1, (F3*F2)^2, F1^-1*(F1^-1*F2)^2*F1^-1, F1^-2*F2*F1^2*F2, (F2*F1*F2*F1^-1)^2 ]
32 / (C8 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F2*F1^-1*F2*F1, F3*F1^-1*F3*F1, F3*F2*F1^4*F3*F2, F1^8 ]
32 / C2 x D16 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^2, (F3*F2)^2, (F3*F1)^2, (F1*F2)^8 ]
32 / C2 x QD16 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^2, F1^4, F3*F1^-1*F3*F1, (F3*F2)^2, F1^-1*F2*F1^2*F2*F1^-1, F2*F1*(F2*F1^-1)^3 ]
32 / C2 x Q16 / Group( [ F1, F2, F3 ] ) / [ F3^2, F2^4, F1^4, F2^-2*F1^-2, F3*F1^-1*F3*F1, F3*F2^-1*F3*F2, F1*F2*F1^-1*(F2*F1)^2*F2 ]
32 / (C8 x C2) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^4, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^-2*(F1*F2)^4 ]
32 / C8 : (C2 x C2) / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^2, (F3*F2)^2, (F1*F2*F1*F3)^2, F2*F1*(F2*F1*F3)^2*F2*F1 ]
32 / (C2 x Q8) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^2, F3*F2^-1*F3*F2, F3*F2^2*F1*F3*F1, F2*F1*F2^-2*F1*F2, F1*F2*(F1*F2^-1)^3 ]
32 / C4 x C2 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F4^2, F2^2, F3^2, F1^4, F4*F1^-1*F4*F1, F3*F1^-1*F3*F1, (F4*F2)^2, F2*F1^-1*F2*F1, (F3*F2)^2, (F4*F3)^2 ]
32 / C2 x C2 x D8 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^2, F3^2, (F3*F1)^2, (F4*F1)^2, (F3*F2)^2, (F4*F2)^2, (F4*F3)^2, (F2*F1)^4, F2*F1*F2*F3*(F2*F1)^2*F3*F1, F2*F1*F2*F4*(F2*F1)^2*F4*F1 ]
32 / C2 x C2 x Q8 / Group( [ F1, F2, F3, F4 ] ) / [ F4^2, F3^2, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F4*F1^-1*F4*F1, F4*F2^-1*F4*F2, F3*F1^-1*F3*F1, (F4*F3)^2, F3*F2^-1*F3*F2 ]
32 / C2 x ((C4 x C2) : C2) / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^2, F3^4, F4*F3^-1*F4*F3, (F4*F1)^2, F3^-1*F1*F3*F1, (F4*F2)^2, F3^-1*F2*F3*F2, F2*F3^2*F1*F2*F1 ]
32 / (C2 x C2 x C2) : (C2 x C2) / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^2, F3^2, (F3*F1)^2, (F4*F2)^2, (F4*F3)^2, (F2*F1*F4)^2, F3*F2*F4*F3*F1*F2*F1*F4, (F4*F1)^4 ]
32 / (C2 x Q8) : C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F4^2, F3^2*F2^2, F3*F2*F3*F2^-1, F2^4, (F1*F2)^2, F4*F2^-1*F4*F2, F3^-1*F1*F3*F1, F4*F3^-1*F4*F3, F4*F1*F4*F2^2*F1 ]
32 / C2 x C2 x C2 x C2 x C2 / Group( [ F1, F2, F3, F4, F5 ] ) / [ F1^2, F2^2, F5^2, F4^2, F3^2, (F4*F1)^2, (F3*F1)^2, (F4*F2)^2, (F5*F1)^2, (F2*F1)^2, (F3*F2)^2, (F5*F3)^2, (F5*F2)^2, (F5*F4)^2, (F4*F3)^2 ]
33 / C33 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1, F2^11 ]
34 / D34 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^17 ]
34 / C34 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^17 ]
35 / C35 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F1^5, F2^7 ]
36 / C9 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F1^-1*F3*F1*F3, F3^9 ]
36 / C36 / Group( [ F1, F2 ] ) / [ F1^4, F2^-1*F1^-1*F2*F1, F2^9 ]
36 / (C2 x C2) : C9 / Group( [ F1, F3 ] ) / [ F3^2, (F1^-1*F3)^2*F1^2*F3, F1^9 ]
36 / D36 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F1*F3^-1)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F3^9 ]
36 / C18 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^9 ]
36 / C3 x (C3 : C4) / Group( [ F1, F2, F4 ] ) / [ F2^3, F4^3, F1^4, F1^-1*F4*F1*F4, F2^-1*F1^-1*F2*F1, F4^-1*F2^-1*F4*F2 ]
36 / (C3 x C3) : C4 / Group( [ F1, F3, F4 ] ) / [ F3^3, F4^3, F1^4, F1^-1*F3*F1*F3, F1^-1*F4*F1*F4, F4^-1*F3^-1*F4*F3, (F1^-1*F3)^2*F1^-2, F3^-1*F4*F1^-1*F4*F3^-1*F1 ]
36 / C12 x C3 / Group( [ F1, F2, F3 ] ) / [ F2^3, F3^3, F1^4, F2^-1*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2 ]
36 / (C3 x C3) : C4 / Group( [ F1, F3 ] ) / [ F3^3, F1^4, F1^-1*F3*F1^2*F3*F1^-1, F1^-1*F3*F1*F3*F1^-1*F3^-1*F1*F3^-1 ]
36 / S3 x S3 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^3, F4^3, (F1*F4)^2, (F2*F3)^2, (F2*F1)^2, F3^-1*F1*F3*F1, F4^-1*F2*F4*F2, F4^-1*F3^-1*F4*F3 ]
36 / C3 x A4 / Group( [ F1, F2, F3 ] ) / [ F3^2, F1^3, F2^3, F2^-1*F1^-1*F2*F1, F3*F2^-1*F3*F2, (F3*F1)^3, (F1^-1*F3)^3 ]
36 / C6 x S3 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^3, F4^3, (F1*F4)^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F4^-1*F2*F4*F2, F4^-1*F3^-1*F4*F3 ]
36 / C2 x ((C3 x C3) : C2) / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^3, F4^3, (F1*F3)^2, (F1*F4)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F4^-1*F2*F4*F2, F4^-1*F3^-1*F4*F3 ]
36 / C6 x C6 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^3, F4^3, (F2*F1)^2, F3^-1*F1*F3*F1, F4^-1*F1*F4*F1, F3^-1*F2*F3*F2, F4^-1*F2*F4*F2, F4^-1*F3^-1*F4*F3 ]
37 / C37 / Group( [ F1 ] ) / [ F1^37 ]
38 / D38 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^19 ]
38 / C38 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^19 ]
39 / C13 : C3 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1*F2^-2, F1^-1*F2*F1*F2^10 ]
39 / C39 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1, F2^13 ]
40 / C5 : C8 / Group( [ F1, F4 ] ) / [ F1^-1*F4*F1*F4, F4^5, F1^8 ]
40 / C40 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F2^5, F1^8 ]
40 / C5 : C8 / Group( [ F1, F4 ] ) / [ F1^-1*F4^2*F1*F4, F4^-1*F1^-1*F4*F1*F4^-1, F4^5, F1^8, F4^-1*F1^4*F4*F1^4 ]
40 / C5 : Q8 / Group( [ F1, F2, F4 ] ) / [ F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F1^-1*F4*F1*F4, F4^-1*F2^-1*F4*F2, F4^5, (F1^-1*F4)^2*F1^-2 ]
40 / C4 x D10 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^4, (F1*F4)^2, F2^-1*F1*F2*F1, F4^-1*F2^-1*F4*F2, F4^5 ]
40 / D40 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^4, (F1*F2)^2, (F1*F4)^2, F4^-1*F2^-1*F4*F2, F4^5 ]
40 / C2 x (C5 : C4) / Group( [ F1, F2, F4 ] ) / [ F2^2, F1^4, F1^-1*F4*F1*F4, F2*F1^-1*F2*F1, F4^-1*F2*F4*F2, F4^5 ]
40 / (C10 x C2) : C2 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^2, (F1*F4)^2, F4^-1*F2*F4*F2, F4^5, (F2*F1)^4 ]
40 / C20 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F1^4, F2*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F3^5 ]
40 / C5 x D8 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^5, (F2*F1)^4 ]
40 / C5 x Q8 / Group( [ F1, F2, F3 ] ) / [ F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F3^5 ]
40 / C2 x (C5 : C4) / Group( [ F1, F2, F4 ] ) / [ F2^2, F1^4, F2*F1^-1*F2*F1, F4^-1*F2*F4*F2, F4^-1*F1^-1*F4*F1*F4^-1, F4^5, (F1^2*F4)^2 ]
40 / C2 x C2 x D10 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, (F1*F4)^2, (F2*F1)^2, (F3*F1)^2, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3, F4^5 ]
40 / C10 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, (F2*F1)^2, (F3*F1)^2, F4^-1*F1*F4*F1, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3, F4^5 ]
41 / C41 / Group( [ F1 ] ) / [ F1^41 ]
42 / C7 : C6 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2*F3^-1, F3^7 ]
42 / C2 x (C7 : C3) / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2*F3^-1, F3^7 ]
42 / C7 x S3 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F2^7 ]
42 / C3 x D14 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F3^7 ]
42 / D42 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F2)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2, F3^7 ]
42 / C42 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2, F3^7 ]
43 / C43 / Group( [ F1 ] ) / [ F1^43 ]
44 / C11 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F1^-1*F3*F1*F3, (F1^-1*F3)^2*F1^-2, F3^11 ]
44 / C44 / Group( [ F1, F2 ] ) / [ F1^4, F2^-1*F1^-1*F2*F1, F2^11 ]
44 / D44 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F1*F3)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F3^11 ]
44 / C22 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^11 ]
45 / C45 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F2^5, F1^9 ]
45 / C15 x C3 / Group( [ F1, F2, F3 ] ) / [ F1^3, F2^3, F2^-1*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F3^5 ]
46 / D46 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^23 ]
46 / C46 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^23 ]
47 / C47 / Group( [ F1 ] ) / [ F1^47 ]
48 / C3 : C16 / Group( [ F1, F5 ] ) / [ F5^3, F1^-1*F5*F1*F5, F1^16 ]
48 / C48 / Group( [ F1, F2 ] ) / [ F2^3, F2^-1*F1^-1*F2*F1, F1^16 ]
48 / (C4 x C4) : C3 / Group( [ F1, F3 ] ) / [ F1^3, F3^4, (F3*F1)^3, (F3*F1)^3, (F3^-1*F1)^3, F3^-2*F1^-1*F3*F1*F3^-1*F1*F3*F1^-1 ]
48 / C8 x S3 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, F1*F2^-1*F1*F2, F5^-1*F2^-1*F5*F2, (F1*F5)^2, F2^8 ]
48 / C24 : C2 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, F5^-1*F2^-1*F5*F2, (F1*F5)^2, F2^-2*(F2^-1*F1)^2, F2^-2*F1*F2^2*F1, (F1*F2*F1*F2^-1)^2 ]
48 / C24 : C2 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, F5^-1*F2^-1*F5*F2, (F1*F5)^2, F2^-3*F1*F2*F1, (F1*F2^2)^2, (F1*F2^-1)^4 ]
48 / D48 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, (F1*F2)^2, (F1*F5)^2, F5^-1*F2^-1*F5*F2, F2^8 ]
48 / C3 : Q16 / Group( [ F1, F2, F5 ] ) / [ F5^3, F2^-1*F1^-1*F2^-1*F1, F1^4, F1^-1*F5*F1*F5, F5^-1*F2^-1*F5*F2, F2^-3*F1^-1*F2*F1^-1, F1*F2^-3*F1*F2 ]
48 / C2 x (C3 : C8) / Group( [ F1, F2, F5 ] ) / [ F2^2, F5^3, F2*F1^-1*F2*F1, F1^-1*F5*F1*F5, F5^-1*F2*F5*F2, F1^8 ]
48 / (C3 : C8) : C2 / Group( [ F1, F2, F5 ] ) / [ F2^2, F5^3, F1^-1*F5*F1*F5, F5^-1*F2*F5*F2, F1^-1*(F1^-1*F2)^2*F1^-1, F1^-2*F2*F1^2*F2, F5*F2*F1*F2*F5*F1^3, (F2*F1*F2*F1^-1)^2 ]
48 / C4 x (C3 : C4) / Group( [ F1, F2, F5 ] ) / [ F5^3, F2^4, F1^4, F1^-1*F5*F1*F5, F5^-1*F2^-1*F5*F2, F2^-1*F1^-1*F2*F1 ]
48 / (C3 : C4) : C4 / Group( [ F1, F2, F5 ] ) / [ F5^3, F1^4, F2^4, F1^-1*F5*F1*F5, F2^-1*F1^-1*F2*F1^-1, F5^-1*F2^-1*F5*F2, F2^2*F1^-1*F2^2*F1 ]
48 / C12 : C4 / Group( [ F1, F2, F5 ] ) / [ F5^3, F2^4, F1^4, F1^-1*F5*F1*F5, F1^-1*F2*F1*F2, F5^-1*F2^-1*F5*F2, F1^2*F2^-1*F1^2*F2 ]
48 / (C12 x C2) : C2 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, F2^4, F5^-1*F2^-1*F5*F2, (F1*F5)^2, F2^2*F1*F2^-2*F1, F2*F1*F5*F2^2*F1*F2*F5, (F1*F2)^4 ]
48 / (C3 x D8) : C2 / Group( [ F1, F2, F5 ] ) / [ F1^2, F2^2, F5^3, F5^-1*F2*F5*F2, (F1*F5)^2, (F1*F2)^8 ]
48 / (C3 : Q8) : C2 / Group( [ F1, F2, F5 ] ) / [ F2^2, F5^3, F1^4, F1^-1*F5*F1*F5, F5^-1*F2*F5*F2, F1^-1*F2*F1^2*F2*F1^-1, F2*F1*(F2*F1^-1)^3 ]
48 / (C3 x Q8) : C2 / Group( [ F1, F2, F5 ] ) / [ F1^2, F5^3, F2^4, (F1*F5)^2, F5^-1*F2^-1*F5*F2, (F2*F1*F2)^2, F1*F2*(F1*F2^-1)^3 ]
48 / C3 : Q16 / Group( [ F1, F2, F5 ] ) / [ F5^3, F1^2*F2^-2, F2^4, F1*F2^2*F1, F1^-1*F5*F1*F5, F5^-1*F2^-1*F5*F2, F1*(F2*F1^-1)^2*F2^-1*F1^-1*F2^-1 ]
48 / (C6 x C2) : C4 / Group( [ F1, F2, F5 ] ) / [ F2^2, F5^3, F1^4, F5^-1*F2*F5*F2, F1^-1*F5*F1*F5, F1^2*F2*F1^-2*F2, (F2*F1)^4, F2*F5^-1*F1^-1*F2*F1*F5*F2*F1^-1*F2*F1 ]
48 / C12 x C4 / Group( [ F1, F2, F3 ] ) / [ F3^3, F1^4, F2^4, F2^-1*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2 ]
48 / C3 x ((C4 x C2) : C2) / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^3, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F1^2*F2*F1^-2*F2, F1*F2*F3^-1*F1^2*F2*F1*F3, (F2*F1)^4 ]
48 / C3 x (C4 : C4) / Group( [ F1, F2, F3 ] ) / [ F3^3, F2^4, F1^4, F1^-1*F2*F1*F2, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F1^2*F2^-1*F1^2*F2, (F2^-1*F1^-2*F2^-1)^2 ]
48 / C24 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^3, F2*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F1^8 ]
48 / C3 x (C8 : C2) / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^3, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F1^-1*(F1^-1*F2)^2*F1^-1, F1^-2*F2*F1^2*F2, F2*F1*F2*F3^-1*F1^3*F3, (F2*F1*F2*F1^-1)^2 ]
48 / C3 x D16 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^3, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, (F1*F2)^8 ]
48 / C3 x QD16 / Group( [ F1, F2, F3 ] ) / [ F2^2, F3^3, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F1^-1*F2*F1^2*F2*F1^-1, F2*F1*(F2*F1^-1)^3 ]
48 / C3 x Q16 / Group( [ F1, F2, F3 ] ) / [ F3^3, F2^4, F1^4, F2^-2*F1^-2, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F1*F2*F1^-1*(F2*F1)^2*F2 ]
48 / C2 . S4 = SL(2,3) . C2 / Group( [ F1, F2, F3 ] ) / [ F2^3, F1^-2*F3^2, F3^4, F1^-1*F2*F1*F2, F2^-1*F3*F2^-1*F3^-1*F2^-1*F3, F3^-1*F2*F1^-2*F2^-1*F3^-1, F1*F3^-1*F1*F2^-1*F3*F2, (F1^-1*F3)^3*F1^-1*F3^-1 ]
48 / GL(2,3) / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^3, F4^4, (F1*F2)^2, F4*F2*F4^-1*F2*F4*F2, (F4*F2^-1)^3, (F2^-1*F1*F4^-1)^2, (F4^2*F1)^2, F4^-1*F2^-1*F4*F2^-1*F4^-1*F2^-1 ]
48 / A4 : C4 / Group( [ F1, F3, F4 ] ) / [ F4^2, F3^3, F1^4, F1^-1*F3*F1*F3, (F4*F1^2)^2, F3^-1*F4*F1*F3^-1*F4*F1^-1, F1*F4*F3*F4*F3^-1*F1^-1*F4 ]
48 / C4 x A4 / Group( [ F1, F2, F4 ] ) / [ F4^2, F2^3, F1^4, F4*F1^-1*F4*F1, F2^-1*F1^-1*F2*F1, (F4*F2)^3 ]
48 / C2 x SL(2,3) / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^3, F4^4, F4^-1*F1*F4*F1, F2^-1*F1*F2*F1, F4^-1*F2*F4*F2*F4^-1*F2, (F4^-1*F2^-1)^3 ]
48 / ((C4 x C2) : C2) : C3 / Group( [ F1, F2, F3 ] ) / [ F2^3, F3^4, F1^4, (F3*F1)^2, F1^-2*F3^-2, F2^-1*F1^-1*F2*F1, F3^-1*F2*F3*F2*F3^-1*F2 ]
48 / C2 x (C3 : Q8) / Group( [ F1, F2, F3, F5 ] ) / [ F2^2, F5^3, F3^2*F1^2, F3*F1*F3*F1^-1, F1^4, F1^-1*F5*F1*F5, F5^-1*F2*F5*F2, F2*F1^-1*F2*F1, F3^-1*F2*F3*F2, F5^-1*F3^-1*F5*F3 ]
48 / C2 x C4 x S3 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F2^2, F5^3, F3^4, F5^-1*F2*F5*F2, (F1*F5)^2, F3^-1*F1*F3*F1, F5^-1*F3^-1*F5*F3, (F2*F1)^2, F3^-1*F2*F3*F2 ]
48 / C2 x D24 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F2^2, F5^3, F3^4, F5^-1*F2*F5*F2, (F1*F5)^2, (F1*F3)^2, F5^-1*F3^-1*F5*F3, (F2*F1)^2, F3^-1*F2*F3*F2 ]
48 / (C12 x C2) : C2 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F3^2, F5^3, F2^4, F5^-1*F2^-1*F5*F2, (F1*F5)^2, F3*F2^-1*F3*F2, F5^-1*F3*F5*F3, F2^-1*F1*F2*F1, F3*F2^2*F1*F3*F1 ]
48 / D8 x S3 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F2^2, F3^2, F5^3, (F3*F1)^2, (F1*F5)^2, F5^-1*F3*F5*F3, F5^-1*F2*F5*F2, (F2*F1)^2, (F3*F2)^4 ]
48 / (C4 x S3) : C2 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F3^2, F5^3, F2^4, F5^-1*F2^-1*F5*F2, (F1*F5)^2, (F3*F2^-1)^2, F2^-1*F1*F2*F1, F5^-1*F3*F5*F3, F3*F2^-2*F1*F3*F1 ]
48 / Q8 x S3 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F5^3, F3^2*F2^2, F3*F2*F3*F2^-1, F2^4, (F1*F5)^2, F5^-1*F3^-1*F5*F3, F5^-1*F2^-1*F5*F2, F3^-1*F1*F3*F1, F2^-1*F1*F2*F1 ]
48 / (C4 x S3) : C2 / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F5^3, F3^2*F2^2, F3*F2*F3*F2^-1, F2^4, (F1*F5)^2, (F1*F3)^2, F5^-1*F3^-1*F5*F3, F5^-1*F2^-1*F5*F2, F2^-1*F1*F2*F1 ]
48 / C2 x C2 x (C3 : C4) / Group( [ F1, F2, F3, F5 ] ) / [ F2^2, F3^2, F5^3, F1^4, F5^-1*F2*F5*F2, F1^-1*F5*F1*F5, F2*F1^-1*F2*F1, F5^-1*F3*F5*F3, (F3*F2)^2, F3*F1^-1*F3*F1 ]
48 / C2 x ((C6 x C2) : C2) / Group( [ F1, F2, F3, F5 ] ) / [ F1^2, F2^2, F3^2, F5^3, (F3*F2)^2, (F1*F5)^2, F5^-1*F3*F5*F3, F5^-1*F2*F5*F2, (F2*F1)^2, (F3*F1)^4 ]
48 / C12 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F2^2, F3^2, F4^3, F1^4, F4^-1*F2*F4*F2, F4^-1*F1^-1*F4*F1, F3*F1^-1*F3*F1, F2*F1^-1*F2*F1, (F3*F2)^2, F4^-1*F3*F4*F3 ]
48 / C6 x D8 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, F4^3, (F3*F1)^2, F4^-1*F1*F4*F1, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3, (F2*F1)^4 ]
48 / C6 x Q8 / Group( [ F1, F2, F3, F4 ] ) / [ F3^2, F4^3, F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F4^-1*F1^-1*F4*F1, F4^-1*F2^-1*F4*F2, F3*F1^-1*F3*F1, F4^-1*F3*F4*F3, F3*F2^-1*F3*F2 ]
48 / C3 x ((C4 x C2) : C2) / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^3, F3^4, F4^-1*F3^-1*F4*F3, F4^-1*F1*F4*F1, F3^-1*F1*F3*F1, F4^-1*F2*F4*F2, F3^-1*F2*F3*F2, F2*F3^2*F1*F2*F1 ]
48 / C2 x S4 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^2, F3^3, F3^-1*F2*F3*F2, (F1*F3)^2, (F4*F2)^2, (F2*F1)^2, (F3^-1*F4*F1)^2, F1*F4*F3*F4*F3^-1*F1*F4 ]
48 / C2 x C2 x A4 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F4^2, F3^3, F3^-1*F1*F3*F1, (F4*F1)^2, F3^-1*F2*F3*F2, (F4*F2)^2, (F2*F1)^2, (F4*F3)^3, (F3^-1*F4)^3 ]
48 / (C2 x C2 x C2 x C2) : C3 / Group( [ F1, F2, F4 ] ) / [ F4^2, F2^2, F1^3, (F4*F2)^2, (F2*F1)^3, (F4*F1)^3, (F1^-1*F2)^3, (F1^-1*F4)^3, (F1^-1*F4*F1*F2)^2, (F4*F1^-1*F2*F1)^2 ]
48 / C2 x C2 x C2 x S3 / Group( [ F1, F2, F3, F4, F5 ] ) / [ F1^2, F2^2, F4^2, F3^2, F5^3, (F1*F5)^2, (F4*F1)^2, (F4*F2)^2, F5^-1*F2*F5*F2, (F2*F1)^2, (F3*F1)^2, F5^-1*F3*F5*F3, F5^-1*F4*F5*F4, (F4*F3)^2, (F3*F2)^2 ]
48 / C6 x C2 x C2 x C2 / Group( [ F1, F2, F3, F4, F5 ] ) / [ F1^2, F2^2, F4^2, F3^2, F5^3, (F4*F1)^2, (F3*F1)^2, (F4*F2)^2, F5^-1*F1*F5*F1, (F2*F1)^2, (F3*F2)^2, F5^-1*F3*F5*F3, F5^-1*F2*F5*F2, F5^-1*F4*F5*F4, (F4*F3)^2 ]
49 / C49 / Group( [ F1 ] ) / [ F1^49 ]
49 / C7 x C7 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F1^7, F2^7 ]
50 / D50 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^25 ]
50 / C50 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^25 ]
50 / C5 x D10 / Group( [ F1, F2, F3 ] ) / [ F1^2, (F1*F3)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F2^5, F3^5 ]
50 / (C5 x C5) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, (F1*F2)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2, F2^5, F3^5 ]
50 / C10 x C5 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2, F2^5, F3^5 ]
51 / C51 / Group( [ F1, F2 ] ) / [ F1^3, F2^-1*F1^-1*F2*F1, F2^17 ]
52 / C13 : C4 / Group( [ F1, F3 ] ) / [ F1^4, F1^-1*F3*F1*F3, (F1^-1*F3)^2*F1^-2, F3^13 ]
52 / C52 / Group( [ F1, F2 ] ) / [ F1^4, F2^-1*F1^-1*F2*F1, F2^13 ]
52 / C13 : C4 / Group( [ F1, F3 ] ) / [ F1^4, (F3^-1*F1^2)^2, F3^2*F1^-1*F3^3*F1, F3^-1*F1^-1*F3^2*F1*F3^-2 ]
52 / D52 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F1*F3)^2, (F2*F1)^2, F3^-1*F2*F3*F2, F3^13 ]
52 / C26 x C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, (F2*F1)^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^13 ]
53 / C53 / Group( [ F1 ] ) / [ F1^53 ]
54 / D54 / Group( [ F1, F2 ] ) / [ F1^2, (F1*F2)^2, F2^27 ]
54 / C54 / Group( [ F1, F2 ] ) / [ F1^2, F2^-1*F1*F2*F1, F2^27 ]
54 / C3 x D18 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F3^-1)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F3^9 ]
54 / C9 x S3 / Group( [ F1, F2, F4 ] ) / [ F1^2, F4^3, (F1*F4)^2, F2^-1*F1*F2*F1, F4^-1*F2^-1*F4*F2, F2^9 ]
54 / (C3 x C3) : C6 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, (F1*F3)^2, F2^-1*F1*F2*F1, (F3^-1*F2)^3, (F3^-1*F2^-1)^3, (F2*F1*F3^-1*F2^-1*F3)^2 ]
54 / C9 : C6 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, (F1*F3^-1)^2, F2^-1*F1*F2*F1, F3^2*F2^-1*F3*F2, F3^-1*F2^-1*F3^4*F2 ]
54 / (C9 x C3) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^3, (F1*F2^-1)^2, (F1*F3)^2, F3^-1*F2^-1*F3*F2, F2^9 ]
54 / ((C3 x C3) : C3) : C2 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, (F1*F2)^2, (F1*F3)^2, (F3^-1*F2)^3, (F3^-1*F2^-1)^3 ]
54 / C18 x C3 / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2, F2^9 ]
54 / C2 x ((C3 x C3) : C3) / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^3, F3^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, (F2^-1*F3^-1)^3, (F3^-1*F2)^3 ]
54 / C2 x (C9 : C3) / Group( [ F1, F2, F3 ] ) / [ F1^2, F3^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F2*F3*F2^2*F3^-1, F2^-1*F3^-1*F2^4*F3 ]
54 / C3 x C3 x S3 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^3, F3^3, F4^3, (F1*F4)^2, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F3^-1*F2^-1*F3*F2, F4^-1*F2^-1*F4*F2, F4^-1*F3^-1*F4*F3 ]
54 / C3 x ((C3 x C3) : C2) / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^3, F3^3, F4^3, (F1*F3)^2, (F1*F4)^2, F2^-1*F1*F2*F1, F3^-1*F2^-1*F3*F2, F4^-1*F2^-1*F4*F2, F4^-1*F3^-1*F4*F3 ]
54 / (C3 x C3 x C3) : C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^3, F3^3, F4^3, (F1*F2)^2, (F1*F3)^2, (F1*F4)^2, F3^-1*F2^-1*F3*F2, F4^-1*F2^-1*F4*F2, F4^-1*F3^-1*F4*F3 ]
54 / C6 x C3 x C3 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^3, F3^3, F4^3, F2^-1*F1*F2*F1, F3^-1*F1*F3*F1, F4^-1*F1*F4*F1, F3^-1*F2^-1*F3*F2, F4^-1*F2^-1*F4*F2, F4^-1*F3^-1*F4*F3 ]
55 / C11 : C5 / Group( [ F1, F2 ] ) / [ F1^5, F2^2*F1*F2^-1*F1^-1*F2, F1^-1*F2^-2*F1*F2^-3 ]
55 / C55 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F1^5, F2^11 ]
56 / C7 : C8 / Group( [ F1, F4 ] ) / [ F1^-1*F4*F1*F4, F4^7, F1^8 ]
56 / C56 / Group( [ F1, F2 ] ) / [ F2^-1*F1^-1*F2*F1, F2^7, F1^8 ]
56 / C7 : Q8 / Group( [ F1, F2, F4 ] ) / [ F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F1^-1*F4*F1*F4, F4^-1*F2^-1*F4*F2, (F1^-1*F4)^2*F1^-2, F4^7 ]
56 / C4 x D14 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^4, (F1*F4)^2, F2^-1*F1*F2*F1, F4^-1*F2^-1*F4*F2, F4^7 ]
56 / D56 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^4, (F1*F2)^2, (F1*F4)^2, F4^-1*F2^-1*F4*F2, F4^7 ]
56 / C2 x (C7 : C4) / Group( [ F1, F2, F4 ] ) / [ F2^2, F1^4, F1^-1*F4*F1*F4, F2*F1^-1*F2*F1, F4^-1*F2*F4*F2, F4^7 ]
56 / (C14 x C2) : C2 / Group( [ F1, F2, F4 ] ) / [ F1^2, F2^2, (F1*F4)^2, F4^-1*F2*F4*F2, F4^7, (F2*F1)^4 ]
56 / C28 x C2 / Group( [ F1, F2, F3 ] ) / [ F2^2, F1^4, F2*F1^-1*F2*F1, F3^-1*F1^-1*F3*F1, F3^-1*F2*F3*F2, F3^7 ]
56 / C7 x D8 / Group( [ F1, F2, F3 ] ) / [ F1^2, F2^2, F3^-1*F1*F3*F1, F3^-1*F2*F3*F2, F3^7, (F2*F1)^4 ]
56 / C7 x Q8 / Group( [ F1, F2, F3 ] ) / [ F2^2*F1^2, F2*F1*F2*F1^-1, F1^4, F3^-1*F1^-1*F3*F1, F3^-1*F2^-1*F3*F2, F3^7 ]
56 / (C2 x C2 x C2) : C7 / Group( [ F1, F3 ] ) / [ F3^2, F1^7, (F3*F1*F3*F1^-1)^2, F1^-2*(F3*F1)^2*F1*F3*F1^-1 ]
56 / C2 x C2 x D14 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, (F1*F4)^2, (F2*F1)^2, (F3*F1)^2, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3, F4^7 ]
56 / C14 x C2 x C2 / Group( [ F1, F2, F3, F4 ] ) / [ F1^2, F2^2, F3^2, (F2*F1)^2, (F3*F1)^2, F4^-1*F1*F4*F1, (F3*F2)^2, F4^-1*F2*F4*F2, F4^-1*F3*F4*F3, F4^7 ]
"""

groups = []
#for line in f:
for line in small_groups.split("\n"):
    #print(line)
    line = line.strip()
    if not line:
        continue
    flds = line.split("/")
    flds = [fld.strip() for fld in flds]
    n = int(flds[0])
    s_desc = flds[1]
    s_gens = flds[2]
    s_rels = flds[3]
    #gens = gens.count("F")
    #gens = ["F"+str(i+1) for i in range(gens)]
    gens = []
    for i in range(10): # ?
        gen = "F"+str(i+1)
        if gen in s_gens:
            gens.append(gen)
    for c in "[] ":
        s_rels = s_rels.replace(c, "")
    s_rels = s_rels.replace("^", "**")
    s_rels = s_rels.split(",")
    gens = [Gen(s) for s in gens]
    for gen in gens:
        globals()[str(gen)] = gen
    #for gen in gens:
    #    s = "%s = Gen('%s')"%(gen,gen)
    #    exec(s)
    #print(n, s_desc, gens, s_rels)
    items = [eval(rel) for rel in s_rels]
    #print(items)

    graph = build(gens, items)
    assert len(graph) == n
    G = graph.get_group()
    assert len(G) == n
    G.desc = s_desc

    #print()
    groups.append(G)

print("groups:", len(groups))
    
    

